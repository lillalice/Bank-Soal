/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package banksoal;

import java.sql.*;
import javax.swing.JDesktopPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alice002
 */
public class SoalJawaban extends javax.swing.JInternalFrame {

    private DefaultTableModel dtm;
    Connection con;
    PreparedStatement stat;
    Statement stmt;
    ResultSet rs;
    String sql;
    String ID;
    int count;
    /**
     * Creates new form SoalJawaban
     */
    JDesktopPane desktop;
    public SoalJawaban(JDesktopPane desktop) {
        ((javax.swing.plaf.basic.BasicInternalFrameUI)this.getUI()).setNorthPane(null);
        
        initComponents();
        
        this.desktop = desktop;
        
        DaftarSoal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        kategori_cb = new javax.swing.JComboBox();
        add = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        soal_tb = new javax.swing.JTable();

        setBorder(null);
        setPreferredSize(new java.awt.Dimension(800, 550));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Kategori :");

        kategori_cb.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        kategori_cb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<all>", "Tes Wawasan Kebangsaan", "Tes Intelegensi Umum", "Tes Karakteristik Pribadi", "Tes Psikotes" }));
        kategori_cb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kategori_cbActionPerformed(evt);
            }
        });

        add.setText("Tambah Soal");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        soal_tb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "No.", "Soal", "Jawaban"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        soal_tb.getTableHeader().setResizingAllowed(false);
        soal_tb.getTableHeader().setReorderingAllowed(false);
        soal_tb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                soal_tbMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(soal_tb);
        if (soal_tb.getColumnModel().getColumnCount() > 0) {
            soal_tb.getColumnModel().getColumn(0).setResizable(false);
            soal_tb.getColumnModel().getColumn(0).setPreferredWidth(30);
            soal_tb.getColumnModel().getColumn(1).setResizable(false);
            soal_tb.getColumnModel().getColumn(1).setPreferredWidth(500);
            soal_tb.getColumnModel().getColumn(2).setResizable(false);
            soal_tb.getColumnModel().getColumn(2).setPreferredWidth(250);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kategori_cb, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 333, Short.MAX_VALUE)
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(kategori_cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        TambahSoal add = new TambahSoal(count, ID, desktop, "Tambah Soal");
        desktop.add(add);
        this.dispose();
        add.setVisible(true);   
    }//GEN-LAST:event_addActionPerformed

    private void kategori_cbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kategori_cbActionPerformed
        if(kategori_cb.getSelectedIndex() == 0) {
            DaftarSoal();
        } else {
            DaftarSoalKategori();
        }
    }//GEN-LAST:event_kategori_cbActionPerformed

    private void soal_tbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_soal_tbMouseClicked
        //if(evt.getClickCount() > 1) {
            Object data;
            data = soal_tb.getModel().getValueAt(soal_tb.getSelectedRow(), 0);
            ID = data.toString();
            
            TambahSoal add = new TambahSoal(count, ID, desktop, "Update");
            desktop.add(add);
            this.dispose();
            add.setVisible(true); 
        //}        
    }//GEN-LAST:event_soal_tbMouseClicked

    void DaftarSoal(){
        dtm = new DefaultTableModel();        
        soal_tb.setModel(dtm);
        
        dtm.addColumn("No.");
        dtm.addColumn("Soal");
        dtm.addColumn("Jawaban");
        dtm.addColumn("Kategori");
        
        try {
            con = DriverManager.getConnection("jdbc:sqlserver://localhost;"
            + "databaseName=BankSoal_db;user=sa;password=root");            
            stmt = con.createStatement();                        
            sql = "SELECT * FROM dbo.Soal ORDER BY ID";
            rs = stmt.executeQuery(sql);
            
            while(rs.next()){
                Object [] o = new Object[4];
                o[0] = rs.getString("ID");
                o[1] = rs.getString("Soal");
                o[2] = rs.getString("Jawaban");
                o[3] = rs.getString("Kategori");
                
                dtm.addRow(o);                
                count = Integer.parseInt((String) o[0]);
                System.out.println(count);
            }
                        
            //count = dtm.getRowCount();
            rs.close();
            stmt.close();
        } catch(SQLException x) {
            System.out.println(x.toString());
        }       
    }
    
    void DaftarSoalKategori(){
        dtm = new DefaultTableModel();        
        soal_tb.setModel(dtm);
        
        dtm.addColumn("No.");
        dtm.addColumn("Soal");
        dtm.addColumn("Jawaban");
        dtm.addColumn("Kategori");
        
        try {
            con = DriverManager.getConnection("jdbc:sqlserver://localhost;"
            + "databaseName=BankSoal_db;user=sa;password=root");            
            stmt = con.createStatement();                        
            sql = "SELECT * FROM dbo.Soal WHERE Kategori='" + kategori_cb.getSelectedItem().toString() + "' ORDER BY ID";
            rs = stmt.executeQuery(sql);
            
            while(rs.next()){
                Object [] o = new Object[4];
                o[0] = rs.getString("ID");
                o[1] = rs.getString("Soal");
                o[2] = rs.getString("Jawaban");
                o[3] = rs.getString("Kategori");
                
                dtm.addRow(o);                
            }
            rs.close();
            stmt.close();
        } catch(SQLException x) {
            System.out.println(x.toString());
        }       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox kategori_cb;
    private javax.swing.JTable soal_tb;
    // End of variables declaration//GEN-END:variables
}


/*

http://www.latihansoalcpns.com/2014/08/latihan-soal-cpns-tes-wawasan.html


*/